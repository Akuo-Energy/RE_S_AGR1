<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_PPC_PE" Id="{613b5eec-84bf-4bc9-b49c-64e4e4c6823a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_PPC_PE EXTENDS FB_PPC_Base
// Function Block Power Plant Controller (PPC) 

VAR_INPUT PERSISTENT
	{attribute 'OPC.UA.DA' := '1'} 
	ParamTcpPort					: UINT := 502;				(* (NA) TCP port *)
	{attribute 'OPC.UA.DA' := '1'}                              
	ParamIPAddress					: STRING := '10.0.0.130'; 	(* (NA) Config: IP Adress of PPC *)
	{attribute 'OPC.UA.DA' := '1'}                              
	ParamUnitID 					: BYTE := 1; 					(* (NA) PE PPC Modbus Unit ID *)
                    	
END_VAR                     	
	                        	
VAR_INPUT           	    	
	MesDataExd						: PPC_PE;
END_VAR             	        	
           	                    	
VAR                             	
	FB_ModbusRead					: ARRAY[1..6] OF FB_ModbusRead;
	FB_ModbusWrite					: ARRAY[1..3] OF FB_ModbusWrite;
	                            	
	AX_ModbusReadAlarm				: ARRAY[1..6] OF BOOL;
	AX_ModbusReadAlarmId			: ARRAY[1..6] OF UDINT;
	AX_ModbusWriteAlarm				: ARRAY[1..3] OF BOOL;
	AX_ModbusWriteAlarmId			: ARRAY[1..3] OF UDINT;	
               	                	
	MesBlock_Temp_1 				: ARRAY [1..120] OF WORD ; 		// (NA) Temporary Block with multiple modbus reading 
	MesBlock_Temp_2 				: ARRAY [1..120] OF WORD ; 		// (NA) Temporary Block with multiple modbus reading 
	MesBlock_Temp_3 				: ARRAY [1..120] OF WORD ; 		// (NA) Temporary Block with multiple modbus reading 
	MesBlock_Temp_4 				: ARRAY [1..120] OF WORD ; 		// (NA) Temporary Block with multiple modbus reading 
	MesBlock_Temp_5 				: ARRAY [1..120] OF WORD ; 		// (NA) Temporary Block with multiple modbus reading 
	MesBlock_Temp_6 				: ARRAY [1..120] OF WORD ; 		// (NA) Temporary Block with multiple modbus reading 
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="M_AlarmManagement" Id="{9f3cdf65-3acc-4dd9-868e-8d20db8fd4d8}">
      <Declaration><![CDATA[METHOD M_AlarmManagement
//////////////////
// Generates object alarms and manages resets. 
//////////////////

VAR 
	// Method local variables (reinitialized at each cycle) 
	FB_AlarmCodeManager		: FB_AlarmCodeManager;  
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
// ALARM CODE //
	FB_AlarmCodeManager(
		bAlarm1				:= FALSE,// FALLO TERMOMAGNETICO HACIA PPC
		bAlarm2				:= FALSE,//
		bAlarm3				:= FALSE,//
		bAlarm4				:= FALSE,//
		bAlarm5				:= FALSE,//
		bAlarm6				:= FALSE,//
		bAlarm7				:= FALSE,//
		bAlarm8				:= FALSE,//
		bAlarm9				:= FALSE,//
		bAlarm10			:= FALSE,//
		bAlarm11			:= FALSE,//
		bAlarm12			:= FALSE,//		
		bAlarm13			:= FALSE,//				
		bAlarm14			:= FALSE,//			
		bAlarm15			:= FALSE,//
		wAlarmCode			=>MesDataExd.MesData.MesAlarmCode);
			
// WARNING CODE //
	FB_AlarmCodeManager(
		bAlarm1				:= FALSE,//
		bAlarm2				:= FALSE,//
		bAlarm3				:= FALSE,//
		bAlarm4				:= FALSE,//
		bAlarm5				:= FALSE,//
		bAlarm6				:= FALSE,//
		bAlarm7				:= FALSE,//
		bAlarm8				:= FALSE,//
		bAlarm9				:= FALSE,//
		bAlarm10			:= FALSE,//
		bAlarm11			:= FALSE,//
		bAlarm12			:= FALSE,//
		bAlarm13			:= FALSE,//
		bAlarm14			:= FALSE,//
		bAlarm15			:= FALSE,//
		wAlarmCode			=>MesDataExd.MesData.MesWarningCode);
		
// EVENT CODE //

	FB_AlarmCodeManager(
		bAlarm1			:= FALSE,//
		bAlarm2			:= FALSE,//
		bAlarm3			:= FALSE,//
		bAlarm4			:= FALSE,//
		bAlarm5			:= FALSE,//
		bAlarm6			:= FALSE,//
		bAlarm7			:= FALSE,//
		bAlarm8			:= FALSE,//
		bAlarm9			:= FALSE,//
		bAlarm10		:= FALSE,//
		bAlarm11		:= FALSE,//
		bAlarm12		:= FALSE,//
		bAlarm13		:= FALSE,//
		bAlarm14		:= FALSE,//
		bAlarm15		:= FALSE,//
		wAlarmCode		=> MesDataExd.MesData.MesEventCode);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_CP" Id="{fcc86e36-7e41-45e0-bf41-34c59f935423}">
      <Declaration><![CDATA[METHOD M_CP
//////////////////
//  Emulator
/////////////////

VAR 
	// Method local variables (reinitialized at each cycle) 
	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[

SUPER^.M_CP() ; 




Trig_Cmd_Read(CLK:=IN_CmdToggleRead);
Trig_Cmd_Write(CLK:=IN_CmdToggleWrite);
	
IF Trig_Cmd_Read.Q THEN
	IN_CmdToggleRead := FALSE;
	MesDataExd.MesData.MesCP_Read := NOT MesDataExd.MesData.MesCP_Read;
END_IF


IF Trig_Cmd_Write.Q THEN
	IN_CmdToggleWrite := FALSE;
	MesDataExd.MesData.MesCP_Write := NOT MesDataExd.MesData.MesCP_Write;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Evaluate" Id="{aa764976-3db6-467f-b350-a806d444820d}">
      <Declaration><![CDATA[METHOD M_Evaluate
//////////////////
// Evaluate //
/////////////////

VAR 
	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Init" Id="{f11f0a42-ed63-4db2-a801-bcddec22c162}">
      <Declaration><![CDATA[METHOD M_Init : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[	
SUPER^.M_Init(); ]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Read" Id="{d90b883a-d13e-42e2-b356-4c07a3bf4add}">
      <Declaration><![CDATA[{attribute 'object_name' := 'M_Read'}
METHOD M_Read
//////////
// Read Method for PE SKID HEMK : Modbus reading
//////////
VAR
	// Method local variables (reinitialized at each cycle) 
	MW_Float			: FB_MergeWordsToFloat;
	MW_REAL				: FB_MergeWordsToDint;
	MW_UInt				: FB_MergeWordsToUint;
	
	AX_QTY_MB			: ARRAY[1..6] OF WORD := [90, 120, 120, 120, 120];
	AX_ADR_MB			: ARRAY[1..6] OF WORD := [0, 120, 240, 440, 600]; 	
	
	KK					: BYTE;						 // Index to loop over modbus blocks 	
	JJ					: BYTE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// FR: frequency regulation
// PR: active power regulation
// PFR: power factor regulation
// QR: reactive power regulation
// VR: voltage regulation
// QRV: Q(V) reactive power regulation depending on V
 
IF MesDataExd.MesData.MesCP_Read THEN		

	// MODBUS REQUEST//
		//Electrical Measurements + Ground Measurements
		FB_ModbusRead[1]
		(
			nTCPPort		:= ParamTcpPort,
			ClockRead		:= MesDataExd.MesData.MesCP_Read AND ClockRead, 
			Reset			:= CmdClearFault_G OR IN_CmdReset,
			sIPAddr			:=ParamIPAddress,
			nUnitID			:= 1, 
			tTimeout		:= ParamTimeout,
			nQuantity		:= AX_QTY_MB[1], 
			nMBAddr			:= AX_ADR_MB[1], 
			cbLength		:= SIZEOF(MesBlock_Temp_1), 
			pDestAddr		:= ADR(MesBlock_Temp_1), 
			ModbusReadAlarm	=> AX_ModbusReadAlarm[1], 
			ErrorId			=> AX_ModbusReadAlarmId[1]
		);
			
		//Production Measurements
		FB_ModbusRead[2]
		(
			nTCPPort		:= ParamTcpPort,
			ClockRead		:= MesDataExd.MesData.MesCP_Read AND ClockRead, 
			Reset			:= CmdClearFault_G OR IN_CmdReset,
			sIPAddr			:=ParamIPAddress, 
			nUnitID			:= 1, 
			tTimeout		:= ParamTimeout,
			nQuantity		:= AX_QTY_MB[2], 
			nMBAddr			:= AX_ADR_MB[2], 
			cbLength		:= SIZEOF(MesBlock_Temp_2), 
			pDestAddr		:= ADR(MesBlock_Temp_2), 
			ModbusReadAlarm	=> AX_ModbusReadAlarm[2], 
			ErrorId			=> AX_ModbusReadAlarmId[2]
		);
		
		FB_ModbusRead[3]
		(
			nTCPPort		:= ParamTcpPort,
			ClockRead		:= MesDataExd.MesData.MesCP_Read AND ClockRead, 
			Reset			:= CmdClearFault_G OR IN_CmdReset,
			sIPAddr			:=ParamIPAddress, 
			nUnitID			:= 1, 
			tTimeout		:= ParamTimeout,
			nQuantity		:= AX_QTY_MB[3], 
			nMBAddr			:= AX_ADR_MB[3], 
			cbLength		:= SIZEOF(MesBlock_Temp_3), 
			pDestAddr		:= ADR(MesBlock_Temp_3), 
			ModbusReadAlarm	=> AX_ModbusReadAlarm[3], 
			ErrorId			=> AX_ModbusReadAlarmId[3]
		);
		
		FB_ModbusRead[4]
		(
			nTCPPort		:= ParamTcpPort,
			ClockRead		:= MesDataExd.MesData.MesCP_Read AND ClockRead, 
			Reset			:= CmdClearFault_G OR IN_CmdReset,
			sIPAddr			:=ParamIPAddress, 
			nUnitID			:= 1, 
			tTimeout		:= ParamTimeout,
			nQuantity		:= AX_QTY_MB[4], 
			nMBAddr			:= AX_ADR_MB[4], 
			cbLength		:= SIZEOF(MesBlock_Temp_4), 
			pDestAddr		:= ADR(MesBlock_Temp_4), 
			ModbusReadAlarm	=> AX_ModbusReadAlarm[4], 
			ErrorId			=> AX_ModbusReadAlarmId[4]
		);

		FB_ModbusRead[5]
		(
			nTCPPort		:= ParamTcpPort,
			ClockRead		:= MesDataExd.MesData.MesCP_Read AND ClockRead, 
			Reset			:= CmdClearFault_G OR IN_CmdReset,
			sIPAddr			:=ParamIPAddress, 
			nUnitID			:= 1, 
			tTimeout		:= ParamTimeout,
			nQuantity		:= AX_QTY_MB[5], 
			nMBAddr			:= AX_ADR_MB[5], 
			cbLength		:= SIZEOF(MesBlock_Temp_5), 
			pDestAddr		:= ADR(MesBlock_Temp_5), 
			ModbusReadAlarm	=> AX_ModbusReadAlarm[5], 
			ErrorId			=> AX_ModbusReadAlarmId[5]
		);		
			
	// PM  
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[ 1], SIGNED:=FALSE, FIX:=  -2, SIZE:=1, VAR_OUT:=MesDataExd.PM.MesData.MesP);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[ 2], SIGNED:=FALSE, FIX:=  -2, SIZE:=1, VAR_OUT:=MesDataExd.PM.MesData.MesQ);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[ 3], SIGNED:=FALSE, FIX:=  -2, SIZE:=1, VAR_OUT:=MesDataExd.PM.MesData.MesS);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[ 4], SIGNED:=FALSE, FIX:=   3, SIZE:=1, VAR_OUT:=MesDataExd.PM.MesData.MesCosPhi);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[ 5], SIGNED:=FALSE, FIX:=   3, SIZE:=1, VAR_OUT:=MesDataExd.PM.MesData.MesFreq);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[ 6], SIGNED:=FALSE, FIX:=  -2, SIZE:=1, VAR_OUT:=MesDataExd.PM.MesData.MesU12);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[ 7], SIGNED:=FALSE, FIX:=  -2, SIZE:=1, VAR_OUT:=MesDataExd.PM.MesData.MesU23);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[ 8], SIGNED:=FALSE, FIX:=  -2, SIZE:=1, VAR_OUT:=MesDataExd.PM.MesData.MesU31);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[ 9], SIGNED:=FALSE, FIX:=   0, SIZE:=1, VAR_OUT:=MesDataExd.PM.MesData.MesI1);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[10], SIGNED:=FALSE, FIX:=   0, SIZE:=1, VAR_OUT:=MesDataExd.PM.MesData.MesI2);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[11], SIGNED:=FALSE, FIX:=   0, SIZE:=1, VAR_OUT:=MesDataExd.PM.MesData.MesI3);	
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[12], SIGNED:=FALSE, FIX:=  -2, SIZE:=1, VAR_OUT:=MesDataExd.PM.MesData.MesV1);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[13], SIGNED:=FALSE, FIX:=  -2, SIZE:=1, VAR_OUT:=MesDataExd.PM.MesData.MesV2);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[14], SIGNED:=FALSE, FIX:=  -2, SIZE:=1, VAR_OUT:=MesDataExd.PM.MesData.MesV3);
	// Status	
		MW_UInt(WORD_STRONG:= MesBlock_Temp_1[15], VAR_OUT := MesDataExd.MesState); 
		MesDataExd.ParamCosPhiLagging	:= WORD_TO_BOOL(MesBlock_Temp_1[ 16]);
	// EL3453
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[39], SIGNED:=FALSE, FIX:=  3, SIZE:=1, VAR_OUT:=MesDataExd.EL3453.MesData.MesFreq);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[40], SIGNED:=FALSE, FIX:=  4, SIZE:=1, VAR_OUT:=MesDataExd.EL3453.MesData.MesCosPhi);
	// Setpoints
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[41], SIGNED:=FALSE, FIX:=  2, SIZE:=1, VAR_OUT:=MesDataExd.IN_SetptP_PR_Cent);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[42], SIGNED:=FALSE, FIX:=  2, SIZE:=1, VAR_OUT:=MesDataExd.IN_SetptP_PR_MW);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[43], SIGNED:=FALSE, FIX:=  3, SIZE:=1, VAR_OUT:=MesDataExd.IN_Feedback_PR_Cent);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[44], SIGNED:=FALSE, FIX:=  3, SIZE:=1, VAR_OUT:=MesDataExd.IN_Feedback_PR_MW);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[45], SIGNED:=FALSE, FIX:=  3, SIZE:=1, VAR_OUT:=MesDataExd.ParamKp_PR);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[46], SIGNED:=FALSE, FIX:=  3, SIZE:=1, VAR_OUT:=MesDataExd.ParamKi_PR);	
		MesDataExd.ParamPIDP_Inversion := WORD_TO_BOOL(MesBlock_Temp_1[47]);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[48], SIGNED:=FALSE, FIX:=  2, SIZE:=1, VAR_OUT:=MesDataExd.ParamPID_PR_Max);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[49], SIGNED:=FALSE, FIX:=  2, SIZE:=1, VAR_OUT:=MesDataExd.ParamPID_PR_Min);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[50], SIGNED:=FALSE, FIX:=  2, SIZE:=1, VAR_OUT:=MesDataExd.OUT_SetpointP_PR);
		
		MesDataExd.MesStateOL_PR := WORD_TO_BOOL(MesBlock_Temp_1[53]);
	// Frequency reg
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[81], SIGNED:=FALSE, FIX:=  3, SIZE:=1, VAR_OUT:=MesDataExd.IN_SetptFreq_FR_Unit);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[82], SIGNED:=FALSE, FIX:=  2, SIZE:=1, VAR_OUT:=MesDataExd.IN_SetptFreq_FR_MW);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[83], SIGNED:=FALSE, FIX:=  3, SIZE:=1, VAR_OUT:=MesDataExd.IN_Feedback_FR_Unit);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[84], SIGNED:=FALSE, FIX:=  2, SIZE:=1, VAR_OUT:=MesDataExd.IN_Feedback_FR_MW);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[86], SIGNED:=FALSE, FIX:=  3, SIZE:=1, VAR_OUT:=MesDataExd.ParamKp_FR);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_1[87], SIGNED:=FALSE, FIX:=  3, SIZE:=1, VAR_OUT:=MesDataExd.ParamKi_FR);
		
		MW_REAL(WORD_STRONG:= MesBlock_Temp_2[ 1], SIGNED:=FALSE, FIX:=  3, SIZE:=1, VAR_OUT:=MesDataExd.ParamFreqnom);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_2[ 8], SIGNED:=FALSE, FIX:=  3, SIZE:=1, VAR_OUT:=MesDataExd.ParamStatism_OverFreq_Primary);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_2[ 9], SIGNED:=FALSE, FIX:=  3, SIZE:=1, VAR_OUT:=MesDataExd.ParamStatism_OverFreq_Secundary);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_2[10], SIGNED:=FALSE, FIX:=  3, SIZE:=1, VAR_OUT:=MesDataExd.ParamStatism_UnderFreq_Primary);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_2[11], SIGNED:=FALSE, FIX:=  3, SIZE:=1, VAR_OUT:=MesDataExd.ParamStatism_UnderFreq_Secundary);	
		MW_REAL(WORD_STRONG:= MesBlock_Temp_2[12], SIGNED:=FALSE, FIX:=  0, SIZE:=1, VAR_OUT:=MesDataExd.ParamDeltaPmax_OverFR);	
		MW_REAL(WORD_STRONG:= MesBlock_Temp_2[13], SIGNED:=FALSE, FIX:=  0, SIZE:=1, VAR_OUT:=MesDataExd.ParamDeltaPmax_UnderFR);			
		MW_REAL(WORD_STRONG:= MesBlock_Temp_2[14], SIGNED:=FALSE, FIX:=  2, SIZE:=1, VAR_OUT:=MesDataExd.ParamDeadBand_FR);	
		MW_UInt(WORD_STRONG:= MesBlock_Temp_2[15], VAR_OUT:=MesDataExd.MesEventID_FR);
		MesDataExd.MesStateID_FR := WORD_TO_BOOL(MesBlock_Temp_2[16]);
		MesDataExd.MesState_FR   := WORD_TO_BOOL(MesBlock_Temp_2[17]);
		
		//MW_REAL(WORD_STRONG:= MesBlock_Temp_2[], SIGNED:=FALSE, FIX:=  , SIZE:=1, VAR_OUT:=MesDataExd.);
		//MW_REAL(WORD_STRONG:= MesBlock_Temp_2[], SIGNED:=FALSE, FIX:=  , SIZE:=1, VAR_OUT:=MesDataExd.);
		//MW_REAL(WORD_STRONG:= MesBlock_Temp_2[], SIGNED:=FALSE, FIX:=  , SIZE:=1, VAR_OUT:=MesDataExd.);
		
	// QR
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[1], SIGNED:=FALSE, FIX:= 2, SIZE:=1, VAR_OUT:=MesDataExd.IN_SetptQ_QR_Cent);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[2], SIGNED:=FALSE, FIX:= 2, SIZE:=1, VAR_OUT:=MesDataExd.IN_SetptQ_QR_MW);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[3], SIGNED:=FALSE, FIX:= 3, SIZE:=1, VAR_OUT:=MesDataExd.IN_Feedback_QR_Cent);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[4], SIGNED:=FALSE, FIX:= 2, SIZE:=1, VAR_OUT:=MesDataExd.IN_Feedback_QR_MW);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[6], SIGNED:=FALSE, FIX:= 3, SIZE:=1, VAR_OUT:=MesDataExd.ParamKp_QR);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[7], SIGNED:=FALSE, FIX:= 3, SIZE:=1, VAR_OUT:=MesDataExd.ParamKi_QR);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[8], SIGNED:=FALSE, FIX:= 2, SIZE:=1, VAR_OUT:=MesDataExd.ParamPID_QR_Max);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[9], SIGNED:=FALSE, FIX:= 2, SIZE:=1, VAR_OUT:=MesDataExd.ParamPID_QR_Min);		
		MesDataExd.ParamPIDQ_Inversion := WORD_TO_BOOL(MesBlock_Temp_3[10]);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[11], SIGNED:=FALSE, FIX:= 3, SIZE:=1, VAR_OUT:=MesDataExd.OUT_SetpointQ_QR);
		
		MesDataExd.MesStateOL_QR := WORD_TO_BOOL(MesBlock_Temp_3[15]);
	
   // Cos(phi)
   		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[41], SIGNED:=FALSE, FIX:= 4, SIZE:=1, VAR_OUT:=MesDataExd.ParamCosPhi);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[46], SIGNED:=FALSE, FIX:= 3, SIZE:=1, VAR_OUT:=MesDataExd.ParamKp_PFR);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[47], SIGNED:=FALSE, FIX:= 3, SIZE:=1, VAR_OUT:=MesDataExd.ParamKi_PFR);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[48], SIGNED:=FALSE, FIX:= 2, SIZE:=1, VAR_OUT:=MesDataExd.ParamPID_PFR_Max);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[49], SIGNED:=FALSE, FIX:= 2, SIZE:=1, VAR_OUT:=MesDataExd.ParamPID_PFR_Min);
		MesDataExd.ParamPID_PFR_Inversion := WORD_TO_BOOL(MesBlock_Temp_3[50]);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[51], SIGNED:=FALSE, FIX:= 3, SIZE:=1, VAR_OUT:=MesDataExd.OUT_Setpoint_PFR);
		
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[81], SIGNED:=FALSE, FIX:= 2, SIZE:=1, VAR_OUT:=MesDataExd.IN_SetpointV_VR_Cent);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[82], SIGNED:=FALSE, FIX:= 2, SIZE:=1, VAR_OUT:=MesDataExd.IN_SetpointV_VR_kV);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[83], SIGNED:=FALSE, FIX:= 2, SIZE:=1, VAR_OUT:=MesDataExd.IN_Feedback_VR_Cent);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[84], SIGNED:=FALSE, FIX:= 2, SIZE:=1, VAR_OUT:=MesDataExd.IN_Feedback_VR_kV);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[86], SIGNED:=FALSE, FIX:= 3, SIZE:=1, VAR_OUT:=MesDataExd.ParamKp_VR);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[87], SIGNED:=FALSE, FIX:= 3, SIZE:=1, VAR_OUT:=MesDataExd.ParamKi_VR);		
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[88], SIGNED:=FALSE, FIX:= 2, SIZE:=1, VAR_OUT:=MesDataExd.ParamPID_VR_Max);	
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[89], SIGNED:=FALSE, FIX:= 2, SIZE:=1, VAR_OUT:=MesDataExd.ParamPID_VR_Min);	
		MesDataExd.ParamPID_VR_Inversion:= WORD_TO_BOOL(MesBlock_Temp_3[90]);	
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[91], SIGNED:=FALSE, FIX:= 2, SIZE:=1, VAR_OUT:=MesDataExd.OUT_Setpoint_VR);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[97], SIGNED:=FALSE, FIX:= 3, SIZE:=1, VAR_OUT:=MesDataExd.ParamStatism_V_VR);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_3[98], SIGNED:=FALSE, FIX:= 3, SIZE:=1, VAR_OUT:=MesDataExd.ParamStatism_Q_VR);	
			
// Q(V)
		MW_REAL(WORD_STRONG:= MesBlock_Temp_4[1], SIGNED:=FALSE, FIX:= 2, SIZE:=1, VAR_OUT:=MesDataExd.IN_SetpointQ_QRV_Cent);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_4[3], SIGNED:=FALSE, FIX:= 3, SIZE:=1, VAR_OUT:=MesDataExd.IN_Feedback_QRV_Cent);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_4[4], SIGNED:=FALSE, FIX:= 3, SIZE:=1, VAR_OUT:=MesDataExd.MesSetptQ_QRV);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_4[6], SIGNED:=FALSE, FIX:= 3, SIZE:=1, VAR_OUT:=MesDataExd.ParamKp_QRV);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_4[7], SIGNED:=FALSE, FIX:= 3, SIZE:=1, VAR_OUT:=MesDataExd.ParamKi_QRV);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_4[8], SIGNED:=FALSE, FIX:= 2, SIZE:=1, VAR_OUT:=MesDataExd.ParamPID_QRV_Max);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_4[9], SIGNED:=FALSE, FIX:= 2, SIZE:=1, VAR_OUT:=MesDataExd.ParamPID_QRV_Min);
		MesDataExd.ParamPID_QRV_Inversion := WORD_TO_BOOL(MesBlock_Temp_4[10]);
		MW_REAL(WORD_STRONG:= MesBlock_Temp_4[11], SIGNED:=FALSE, FIX:= 3, SIZE:=1, VAR_OUT:=MesDataExd.OUT_Setpoint_QRV);			

// Block_Temp5
		MesDataExd.MesState_PR		:= WORD_TO_BOOL(MesBlock_Temp_5[1]);
		MesDataExd.MesState_PRDelta := WORD_TO_BOOL(MesBlock_Temp_5[2]);
		MesDataExd.MesState_QR 		:= WORD_TO_BOOL(MesBlock_Temp_5[5]);
		MesDataExd.CmdState_PFR		:= WORD_TO_BOOL(MesBlock_Temp_5[6]);
		MesDataExd.MesState_VRS		:= WORD_TO_BOOL(MesBlock_Temp_5[7]);
		MesDataExd.MesState_PFRP 	:= WORD_TO_BOOL(MesBlock_Temp_5[9]);
		MesDataExd.MesState_QRV 	:= WORD_TO_BOOL(MesBlock_Temp_5[10]);
		MesDataExd.MesState_QRamp 	:= WORD_TO_BOOL(MesBlock_Temp_5[14]);
		MesDataExd.MesState_PRamp 	:= WORD_TO_BOOL(MesBlock_Temp_5[15]);
		// MesDataExd. := WORD_TO_BOOL(MesBlock_Temp_5[]);	
		
// Inverters Status Words 

		MesDataExd.MesInvStatus[1]  := MesBlock_Temp_5[81];
		MesDataExd.MesInvStatus[2]  := MesBlock_Temp_5[82];
		MesDataExd.MesInvStatus[3]  := MesBlock_Temp_5[83];
		MesDataExd.MesInvStatus[4]  := MesBlock_Temp_5[84];
		MesDataExd.MesInvStatus[5]  := MesBlock_Temp_5[85];
		MesDataExd.MesInvStatus[6]  := MesBlock_Temp_5[86];
		MesDataExd.MesInvStatus[7]  := MesBlock_Temp_5[87];
		MesDataExd.MesInvStatus[8]  := MesBlock_Temp_5[88];
		MesDataExd.MesInvStatus[9]  := MesBlock_Temp_5[89];
		MesDataExd.MesInvStatus[10] := MesBlock_Temp_5[90];
		MesDataExd.MesInvStatus[11] := MesBlock_Temp_5[91];
END_IF  
	]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_PPC_PE">
      <LineId Id="151" Count="0" />
    </LineIds>
    <LineIds Name="FB_PPC_PE.M_AlarmManagement">
      <LineId Id="1940" Count="13" />
      <LineId Id="2021" Count="2" />
      <LineId Id="1954" Count="20" />
      <LineId Id="1993" Count="19" />
    </LineIds>
    <LineIds Name="FB_PPC_PE.M_CP">
      <LineId Id="155" Count="19" />
      <LineId Id="51" Count="0" />
    </LineIds>
    <LineIds Name="FB_PPC_PE.M_Evaluate">
      <LineId Id="600" Count="0" />
    </LineIds>
    <LineIds Name="FB_PPC_PE.M_Init">
      <LineId Id="12" Count="0" />
      <LineId Id="39" Count="0" />
    </LineIds>
    <LineIds Name="FB_PPC_PE.M_Read">
      <LineId Id="21234" Count="42" />
      <LineId Id="21447" Count="0" />
      <LineId Id="21449" Count="13" />
      <LineId Id="21448" Count="0" />
      <LineId Id="21277" Count="0" />
      <LineId Id="21472" Count="13" />
      <LineId Id="21463" Count="0" />
      <LineId Id="21486" Count="14" />
      <LineId Id="21464" Count="1" />
      <LineId Id="21278" Count="81" />
      <LineId Id="21430" Count="0" />
      <LineId Id="21360" Count="20" />
      <LineId Id="21402" Count="0" />
      <LineId Id="21399" Count="0" />
      <LineId Id="21381" Count="0" />
      <LineId Id="21400" Count="0" />
      <LineId Id="21403" Count="3" />
      <LineId Id="21409" Count="0" />
      <LineId Id="21411" Count="0" />
      <LineId Id="21413" Count="0" />
      <LineId Id="21412" Count="0" />
      <LineId Id="21501" Count="1" />
      <LineId Id="21504" Count="0" />
      <LineId Id="21503" Count="0" />
      <LineId Id="21505" Count="9" />
      <LineId Id="21382" Count="0" />
      <LineId Id="7521" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>