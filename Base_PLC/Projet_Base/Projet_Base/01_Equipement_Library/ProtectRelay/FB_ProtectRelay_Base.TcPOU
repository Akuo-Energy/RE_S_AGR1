<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_ProtectRelay_Base" Id="{bdd0c187-f912-48e8-8cda-7b3177d0acfc}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_ProtectRelay_Base
//////////////////
// SEPAM system for High Voltage or Low Voltage Grid Protection. 
//////////////////
VAR_INPUT PERSISTENT
	// Parameters of the Object (instance/model specific) 
		ParamTempoComAlarm					: TIME := T#10S;	(* (s) Config : Tempo to detect LOC Alarm*)
		ParamTimeOut						: TIME := T#5S;		(* (s) Modbus Timeout*)
		ParamClockReadTime					: TIME := T#2S;		(* (s) Modbus Read Frequency*)
		ParamClockWriteTime					: TIME := T#1S;		(* (s) Modbus Write Frequency*)
				   		                    		
END_VAR                                                        

VAR_OUTPUT
	//Child objects
	
END_VAR

VAR_INPUT
	IN_CmdReset_L							: BOOL;				// (NA) External Reset Command	
    IN_CmdToggleRead						: BOOL;
    IN_CmdToggleWrite						: BOOL;
	                                    
	// I/O Inputs                       
		// GTE Protection LV            
		// WatchDog                     
	IN_MesWatchDog_IO						: BOOL :=TRUE;		// Watchdog is at True := Sepam OK
END_VAR

VAR
	//M_ALARMMANAGEMENT VARIABLES//                                                  
		TON_ComAlarm						: TON ; 			// Tempo before detecting loss of communication. 
	
	//M_READ //
		TP1									: TP;
		TP2									: TP;
		ClockRead				AT %Q*		: BOOL;
		ClockWrite							: BOOL;
	///MesDataExd						: ProtectRelay;		

    //M_CP VARIABLES//
		Trig_Cmd_Read						: R_TRIG;                                                                                        
		Trig_Cmd_Write						: R_TRIG;                                                                                        
	//M_INIT VARIABLES // 	        		
		bInit								: BOOL := TRUE ; 		// (NA) Initialize object parameters at first cycle 
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="M_AlarmManagement" Id="{c1d0fd1d-8e2a-40c9-b5f2-2adc6d9481bf}">
      <Declaration><![CDATA[METHOD M_AlarmManagement
//////////////////
// Manages Sepam Alarms. Alarms opens HT CB until Sepam manual Reset . Warning Opens CB-L but does not maintain warning
/////////////////

VAR 
	// Method local variables (reinitialized at each cycle) 
	FB_AlarmCodeManager 	: FB_AlarmCodeManager ; 

 
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_CP" Id="{ba650ce5-e0e5-4304-b6fd-73c3166e11ba}">
      <Declaration><![CDATA[METHOD M_CP 
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Evaluate" Id="{b280a8bb-44f4-4572-a337-b32add50cf27}">
      <Declaration><![CDATA[METHOD M_Evaluate
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Execute" Id="{dd38f048-0eee-4161-84f7-5c333f90d12a}">
      <Declaration><![CDATA[METHOD M_Execute
//////////////////
//  Method Calls 
/////////////////

VAR 
	// Method local variables (reinitialized at each cycle) 

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[	TP1(IN:=NOT TP1.Q , PT:= ParamClockReadTime);
	ClockRead 		:= TP1.Q;
	TP2(IN:=NOT TP2.Q , PT:= ParamClockWriteTime);
	ClockWrite		:= TP2.Q;

// INITIALIZE // 
	IF bInit THEN
		M_Init() ; 
		bInit		:= FALSE ; 
		
	ELSIF CmdInit_G OR IN_CmdReset_L THEN 
		bInit		:= TRUE ;
		
	END_IF

// METHODS CALLS // 
	M_CP();
	M_Read(); 
	
	M_Evaluate(); 
	M_Write();
	
	M_AlarmManagement(); ]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Init" Id="{8961d404-9e78-411b-b957-f09d6416f18f}">
      <Declaration><![CDATA[METHOD M_Init
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[

]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Read" Id="{07e3987e-d789-4bf0-93ab-fe02a1e0bd84}">
      <Declaration><![CDATA[METHOD M_Read
//////////////////
//  Method Calls 
/////////////////

VAR 
	// Method local variables (reinitialized at each cycle) 

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Write" Id="{a0190759-3320-46b2-a091-971a22fb8604}">
      <Declaration><![CDATA[METHOD M_Write 
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_ProtectRelay_Base">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ProtectRelay_Base.M_AlarmManagement">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ProtectRelay_Base.M_CP">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_ProtectRelay_Base.M_Evaluate">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_ProtectRelay_Base.M_Execute">
      <LineId Id="173" Count="21" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ProtectRelay_Base.M_Init">
      <LineId Id="3" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ProtectRelay_Base.M_Read">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ProtectRelay_Base.M_Write">
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>