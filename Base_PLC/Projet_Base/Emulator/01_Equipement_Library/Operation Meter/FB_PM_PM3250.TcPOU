<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="FB_PM_PM3250" Id="{372469ca-9ebd-49e4-92f1-be6e1017fc5a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_PM_PM3250 EXTENDS FB_PM_Base
//////////////////
// Measurement Solution based on Digiware, but access through PMS Socomec
//////////////////
VAR CONSTANT
	// Characteristics of the object (Same for all instances)
			
END_VAR

VAR_INPUT PERSISTENT
	// Parameters of the Object (instance specific) 
	ParamUnitID					: BYTE 		:= 1 ;								// (NA)unit ID
//	ParamInInterfaceSub			: BOOL := TRUE; // Serial interface RS422/RS485 TYPE (0:EL6021,1:SUB9)			
END_VAR

VAR_OUTPUT
	//Child objects
	
END_VAR
VAR
	//M_ALARMMANAGEMENT VARIABLES//

	//M_READ VARIABLES//

		InputStructRead 			: ARRAY[1..5] OF  Struct_InputRTU;

		AX_Quantity					: ARRAY[1..5] OF WORD;					// (NA) Quantity of blocks to read
		AX_Address					: ARRAY[1..5] OF WORD;					// (NA) Start address of the read
		MesBlock_Temp 				: ARRAY[1..5] OF ARRAY[1..125] OF WORD;	// (NA) Temporary Block with multiple modbus reading (U30 + I35)
		Busy						: BOOL;
		OutErrorMbRead				: ARRAY[1..5] OF BOOL;
	

	//M_INIT VARIABLES //
		OutFBCompleteted			: BOOL;
	// M_EXECUTE VARIABLES //
		RTrigI						: R_TRIG;
		MesDataExd		AT %Q*			: PM_Standard ;

 
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="M_Execute" Id="{18d83a92-8ddc-42ac-8e89-f47303fab8e2}">
      <Declaration><![CDATA[METHOD M_Execute
//////////////////
//  Method Calls 
/////////////////
VAR 
	// Method local variables (reinitialized at each cycle) 
	// EMULATOR
		Psoltot			: REAL;		// Total Solar Power  
		KK				: BYTE;		// For Loop
		MesDataNull		: PM;
		MesStateCB      : BOOL;
		
	 	

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
	

MesStateCB := A1_SUBMV.A1_MainMVCB.MesDataExd.MesData.MesClosed AND A1_SUBMV.A1_GridMVCB.MesDataExd.MesData.MesClosed AND A1_SUBMV.A1_AuxMVCB.MesDataExd.MesData.MesClosed ; 
MesDataExd.MesData.MesP := 0 ;
MesDataExd.MesData.MesQ := 0 ; 


IF MesStateCB THEN
	MesDataExd.MesData.MesU 	:= 230;
	MesDataExd.MesData.MesU12 	:= 230;
	MesDataExd.MesData.MesU23 	:= 230;
	MesDataExd.MesData.MesU31 	:= 230;
	MesDataExd.MesData.MesV 	:= A1_PP.MesData.MesU/SQRT(3);
	MesDataExd.MesData.MesV1 	:= A1_PP.MesData.MesU/SQRT(3);
	MesDataExd.MesData.MesV2 	:= A1_PP.MesData.MesU/SQRT(3);
	MesDataExd.MesData.MesV3 	:= A1_PP.MesData.MesU/SQRT(3);
	MesDataExd.MesData.MesFreq := A1_PP.MesData.MesFreq;
	
	

	MesDataExd.MesData.MesP 	:= 120  ;
	MesDataExd.MesData.MesQ 	:= -20 ;
	
	
	MesDataExd.MesData.MesP1 	:= MesDataExd.MesData.MesP ;
	MesDataExd.MesData.MesP2 	:= 0 ;
	MesDataExd.MesData.MesP3 	:= 0 ;

	MesDataExd.MesData.MesQ1 	:= MesDataExd.MesData.MesQ;
	MesDataExd.MesData.MesQ2 	:= 0;
	MesDataExd.MesData.MesQ3 	:= 0;
	MesDataExd.MesData.MesS := SQRT( MesDataExd.MesData.MesP *  MesDataExd.MesData.MesP + MesDataExd.MesData.MesQ*MesDataExd.MesData.MesQ ) ; 
	
	MesDataExd.MesData.MesI 	:= MesDataExd.MesData.MesS/(SQRT(3)* A1_PP.MesData.MesU);
	MesDataExd.MesData.MesI1 	:= MesDataExd.MesData.MesS/(SQRT(3)* A1_PP.MesData.MesU);

	IF MesDataExd.MesData.MesP > 0 THEN
		MesDataExd.MesData.MesEActProd := MesDataExd.MesData.MesEActProd  + MesDataExd.MesData.MesP*ParamCycleTime_Emul/3600000	;
	END_IF
	IF MesDataExd.MesData.MesP < 0 THEN
		MesDataExd.MesData.MesEActCons :=  MesDataExd.MesData.MesEActCons - MesDataExd.MesData.MesP*ParamCycleTime_Emul/3600000	;
	END_IF
	IF MesDataExd.MesData.MesQ > 0 THEN
		MesDataExd.MesData.MesEReactProd := MesDataExd.MesData.MesEReactCons + MesDataExd.MesData.MesQ*ParamCycleTime_Emul/3600000	;
	END_IF
	IF MesDataExd.MesData.MesQ < 0 THEN
		MesDataExd.MesData.MesEReactCons :=  MesDataExd.MesData.MesEReactCons - MesDataExd.MesData.MesQ*ParamCycleTime_Emul/3600000	;
	END_IF
	
	
	
END_IF



	
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_PM_PM3250">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_PM_PM3250.M_Execute">
      <LineId Id="89" Count="35" />
      <LineId Id="164" Count="10" />
      <LineId Id="161" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="162" Count="1" />
      <LineId Id="127" Count="1" />
      <LineId Id="140" Count="1" />
      <LineId Id="145" Count="0" />
      <LineId Id="2" Count="0" />
      <LineId Id="175" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>